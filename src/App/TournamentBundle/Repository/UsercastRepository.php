<?php

namespace App\TournamentBundle\Repository;

/**
 * UsercastRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UsercastRepository extends \Doctrine\ORM\EntityRepository
{

	public function check_score($idfore, $tr, $tour, $userId) {

		$dql = "SELECT u.idfore FROM AppTournamentBundle:Usercast u
				WHERE u.tr = :tr AND u.tour = :tour AND u.user = :user AND u.idfore = :fore";

		$query = $this->getEntityManager()->createQuery($dql)
					  ->SetParameter("tr", $tr)
					  ->SetParameter("tour", $tour)
					  ->SetParameter("user", $userId)
					  ->SetParameter("fore", $idfore);

		$result = $query->execute();

		return $result;
	}

	public function get_prescore($userId, $fore) {

		$ids = [];
		for($i=0;$i<count($fore);$i++) {
			$ids[] = $fore[$i]->getId();
		}

		$dql = "SELECT u.idfore, u.result1, u.result2 FROM AppTournamentBundle:Usercast u
				WHERE u.user = :user AND u.idfore IN (".implode(', ', $ids).")";

		$query = $this->getEntityManager()->createQuery($dql)
					  ->SetParameter("user", $userId);

		$result = $query->execute();

		$results = [];
		for($i=0;$i<count($result);$i++) {

			$idfore = $result[$i]['idfore'];
			$r1 = $result[$i]['result1'];
			$r2 = $result[$i]['result2'];

			$results[$idfore] = ['result1' => $r1, 'result2' => $r2];
		}

		return $results;
	}

	public function get_scores($idfore) {

		$dql = "SELECT u.id, u.result1, u.result2 FROM AppTournamentBundle:Usercast u
				WHERE u.idfore = :idfore";

		$query = $this->getEntityManager()->createQuery($dql)
					  ->SetParameter('idfore', $idfore);

		$result = $query->execute();

		return $result;
	}

}