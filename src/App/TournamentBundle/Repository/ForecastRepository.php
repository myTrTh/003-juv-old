<?php

namespace App\TournamentBundle\Repository;

/**
 * ForecastRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ForecastRepository extends \Doctrine\ORM\EntityRepository
{
	public function how_games($hash) {
		$dql = "SELECT count(f.id) as summ FROM AppTournamentBundle:Forecast f WHERE f.hash = :hash";

		$query = $this->getEntityManager()->createQuery($dql)
			 ->SetParameter('hash', $hash);

		$result = $query->execute();

		if(empty($result))
			return 0;
		else
			return $result[0]['summ'];
	}

	public function get_forecast($forebridge) {

		$dql = "SELECT f FROM AppTournamentBundle:Forecast f WHERE f.hash = :hash";

		$query = $this->getEntityManager()->createQuery($dql)
			 ->SetParameter('hash', $forebridge);

		$result = $query->execute();

		if(empty($result))
			$result = 0;

		return $result;
	}

	public function getActiveTours($types) {
		$dql = "SELECT f.hash, f.team1, f.team2 
				FROM AppTournamentBundle:Forecast f
				INNER JOIN AppTournamentBundle:Forebridge b
				WHERE f.hash = b.hash
				INNER JOIN AppTournamentBundle:Tournament t
				WHERE b.tr = t.id
				WHERE f.timer > CURRENT_DATE() AND t.types = :types";

		$query = $this->getEntityManager()->createQuery($dql)
					  ->SetParameter('types', $types);

		$result = $query->execute();

		if(empty($result)) {
			$results = 0;
		} else {
			$results = [];
			for($i=0;$i<count($result);$i++) {
				$hash = $result[$i]['hash'];
				$team1 = $result[$i]['team1'];
				$team2 = $result[$i]['team2'];

				$results[$hash][] = ["team1" => $team1, "team2" => $team2, "hash" => $hash];
			}
		}

		return $results;
	}

	public function get_cast_info($idfore) {
		$dql = "SELECT f.timer FROM AppTournamentBundle:Forecast f
				WHERE f.id = :id";

		$query = $this->getEntityManager()->createQuery($dql)
					  ->SetParameter("id", $idfore);

		$result = $query->execute();

		return $result;
	}
}
