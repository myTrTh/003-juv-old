<?php

namespace App\GuestbookBundle\Repository;
use Doctrine\ORM\EntityManager;


/**
 * NachRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NachRepository extends \Doctrine\ORM\EntityRepository
{
	public function order_nach($number){
		$dql = "SELECT n FROM AppGuestbookBundle:Nach n
			WHERE n.number = :nach";

		$query = $this->getEntityManager()->createQuery($dql)
			->SetParameter('nach', $number);

		$result = $query->execute();
		return $result;
	}

	public function show_nach(){
		$dql = "SELECT n FROM AppGuestbookBundle:Nach n
		ORDER BY n.number DESC";

		$query = $this->getEntityManager()->createQuery($dql);

		$result = $query->execute();
		return $result;		
	}

	public function get_topnach(){
		$dql = "SELECT n.number, n.title, n.description, g.user, u.username
				FROM AppGuestbookBundle:Nach n
				INNER JOIN AppGuestbookBundle:Guestbook g
				WHERE n.number = g.id
				INNER JOIN AppUserBundle:User u
				WHERE u.id = g.user";

		$query = $this->getEntityManager()->createQuery($dql);

		$result = $query->execute();

		$topnach = [];
		for($i=0;$i<count($result);$i++){
			$us = $result[$i]['user'];
			$usname = $result[$i]['username'];
			$ustitle = $result[$i]['title'];
			$usnumber = $result[$i]['number'];
			$usdesc = $result[$i]['description'];

			$topnach[$us][] = [$usnumber, $ustitle, $usdesc];
		}

		return $topnach;
	}

    public function get_nach(){
        $sql = "SELECT id, user FROM guestbook WHERE id RLIKE '([1-9]+000)'";

        $em = $this->getEntityManager();
        $stmt = $em->getConnection()->prepare($sql);
        $stmt->execute();
        $result = $stmt->fetchAll();

        $nach = [];
        for($i=0;$i<count($result);$i++){
            $usr = $result[$i]['user'];
            $id = $result[$i]['id'];
            $nach[$usr][] = $id;
        }

        return $nach;
    }	
}
