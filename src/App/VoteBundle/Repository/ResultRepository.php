<?php

namespace App\VoteBundle\Repository;

/**
 * ResultRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ResultRepository extends \Doctrine\ORM\EntityRepository {

	public function user_status($userId, $vote, $type, $ip, $session_id) {
		if($type == 1) {
			$dql = "SELECT r.id FROM AppVoteBundle:Result r
					WHERE r.vote = :vote AND r.user = :user";

		$query = $this->getEntityManager()->createQuery($dql)
				      ->SetParameter('vote', $vote)
				      ->SetParameter('user', $userId);

		} else {
			$dql = "SELECT r.id FROM AppVoteBundle:Result r
					WHERE r.vote = :vote AND (r.session = :session OR r.ip = :ip)";

		$query = $this->getEntityManager()->createQuery($dql)
				      ->SetParameter('vote', $vote)
				      ->SetParameter('session', $session_id)
				      ->SetParameter('ip', $ip);
		}

		$result = $query->getResult();

		return count($result);
	}

	public function get_results($vote) {
		$dql = "SELECT r.user, r.anon, r.options, u.username
		        FROM AppVoteBundle:Result r
		        INNER JOIN AppUserBundle:User u
				WHERE u.id = r.user
		        WHERE r.vote = :vote AND r.status = 1";

		$query = $this->getEntityManager()->createQuery($dql)
				      ->SetParameter('vote', $vote);

		$result = $query->getResult();

		$results = [];
		$sum = [];
		for($i=0;$i<count($result);$i++) {
			$option = $result[$i]['options'];
			$id = $result[$i]['user'];
			$user = $result[$i]['username'];
			$anon = $result[$i]['anon'];

			# users result
			$results[$option][] = ['id' => $id, 'user' => $user, 'anon' => $anon];

			# count results
			if(empty($sum[$option]))
				$sum[$option] = 0;
			$sum[$option] +=1;
		}

		return array($results, $sum, array_sum($sum));
	}
}