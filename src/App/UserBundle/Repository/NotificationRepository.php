<?php

namespace App\UserBundle\Repository;

/**
 * NotificationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NotificationRepository extends \Doctrine\ORM\EntityRepository {

	public function get_more_new($entity, $userId) {

		$dql = "SELECT s.id, s.created FROM ".$entity." s WHERE s.created > DATE_SUB(CURRENT_DATE() , 2, 'DAY')";
		$query = $this->getEntityManager()->createQuery($dql);

		$result = $query->execute();

		$results = [];
		for($i=0;$i<count($result);$i++) {
			$id = $result[$i]['id'];
			$date = $result[$i]['created'];

			$dql = "SELECT n.id FROM AppUserBundle:Notification n 
			 		WHERE n.user = :user AND n.route = :route AND n.created > :last";

			$query = $this->getEntityManager()->createQuery($dql)
						  ->SetParameter("user", $userId)
						  ->SetParameter("route", "vote/".$id)
						  ->SetParameter("last", $date);

			$res = $query->execute();
			if(!count($res)) {
				$results[] = $id;
			}
		}

		return $results;
	}

	public function get_single_new($user, $entity, $date) {

		if(!$date) {
			$now = new \DateTime();
			$date = $now->modify('-2 days');
		}

		$dql = "SELECT n.id FROM ".$entity." n 
		 		WHERE n.created > :last AND n.user != :user";

		$query = $this->getEntityManager()->createQuery($dql)
					  ->SetParameter("last", $date)
					  ->SetParameter("user", $user);

		$result = $query->execute();

		return $result;

	}	

	public function last_visit($userId, $route) {

		$dql = "SELECT n.created FROM AppUserBundle:Notification n
					WHERE n.route = :route AND n.user = :user";

		$query = $this->getEntityManager()->createQuery($dql)
					  ->SetParameter("route", $route)
					  ->SetParameter("user", $userId);

		$result = $query->execute();

		if(count($result))
			return $result[0]['created'];
		else
			return 0;
	}

	public function last_visit_all($userId, $route) {

		$dql = "SELECT n.created FROM AppUserBundle:Notification n
				WHERE n.route = :route AND n.user != :user
				ORDER BY n.created DESC";

		$query = $this->getEntityManager()->createQuery($dql)
					  ->SetParameter("route", $route)
					  ->SetParameter("user", $userId)
					  ->SetMaxResults(1);

		$result = $query->execute();

		if(count($result))
			return $result[0]['created'];
		else
			return new \DateTime('1999-12-12 12:12:12');
	}	

	public function delete_visit($userId, $route) {
		// if isset
		$dql = "DELETE FROM AppUserBundle:Notification n
		WHERE n.route = :route AND n.user = :user";

		$query = $this->getEntityManager()->createQuery($dql)
					  ->SetParameter("route", $route)
					  ->SetParameter("user", $userId);

		$query->execute();
	}

}
